/*
 *  Phusion Passenger - https://www.phusionpassenger.com/
 *  Copyright (c) 2010-2014 Phusion
 *
 *  "Phusion Passenger" is a trademark of Hongli Lai & Ninh Bui.
 *
 *  See LICENSE file for license information.
 */

/*
 * ConfigurationCommands.cpp is automatically generated from ConfigurationCommands.cpp.erb,
 * using definitions from lib/phusion_passenger/apache2/config_options.rb.
 * Edits to ConfigurationCommands.cpp will be lost.
 *
 * To update ConfigurationCommands.cpp:
 *   rake apache2
 *
 * To force regeneration of ConfigurationCommands.c:
 *   rm -f ext/apache2/ConfigurationCommands.cpp
 *   rake ext/apache2/ConfigurationCommands.cpp
 */

<%
require 'phusion_passenger/apache2/config_options'

def resolve_possible_alias(option)
	if option[:alias_for]
		the_alias = APACHE2_DIRECTORY_CONFIGURATION_OPTIONS.find do |o|
			o[:name] == option[:alias_for]
		end.dup
		the_alias[:aliased_for] = option[:name]
		return the_alias
	else
		return option
	end
end

def macro_for(option)
	case option[:type]
	when :string, :integer
		return "AP_INIT_TAKE1"
	when :flag
		return "AP_INIT_FLAG"
	else
		raise "Unknown type #{option[:type].inspect} for option #{option[:name].inspect}"
	end
end

def name_for(option)
	return (option[:aliased_for] || option[:name]).inspect
end

def function_type_for(option)
	case option[:type]
	when :string, :integer
		return "Take1Func"
	when :flag
		return "FlagFunc"
	else
		raise "Unknown type #{option[:type].inspect}"
	end
end

def function_for(option)
	if option[:function]
		return option[:function]
	else
		function_name = option[:name].gsub(/[A-Z]/) do |letter|
			"_" + letter[0..0].downcase
		end
		return "cmd#{function_name}"
	end
end

def context_for(option)
	context = option[:context] || ["OR_OPTIONS", "ACCESS_CONF", "RSRC_CONF"]
	return context.join(" | ")
end

def description_for(option)
	return option[:desc].inspect
end
%>

<% for option in APACHE2_DIRECTORY_CONFIGURATION_OPTIONS %>
	<% option = resolve_possible_alias(option) %>
	<%= macro_for(option) %>(<%= name_for(option) %>,
		(<%= function_type_for(option) %>) <%= function_for(option) %>,
		NULL,
		<%= context_for(option) %>,
		<%= description_for(option) %>),
<% end %>
