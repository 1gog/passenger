#!/usr/bin/env ruby
#  Phusion Passenger - http://www.modrails.com/
#  Copyright (C) 2009  Phusion
#
#  Phusion Passenger is a trademark of Hongli Lai & Ninh Bui.
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; version 2 of the License.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

PASSENGER_ROOT = File.expand_path(File.dirname(__FILE__) << "/..")
$LOAD_PATH.unshift("#{PASSENGER_ROOT}/lib")
$LOAD_PATH.unshift("#{PASSENGER_ROOT}/ext")

require 'optparse'
require 'passenger/platform_info'
require 'passenger/dependencies'
require 'passenger/abstract_installer'
include PlatformInfo

class Installer < Passenger::AbstractInstaller
	include Passenger
	
	REQUIRED_DEPENDENCIES = [
		Dependencies::GCC,
		Dependencies::Ruby_DevHeaders,
		Dependencies::Ruby_OpenSSL,
		Dependencies::RubyGems,
		Dependencies::Rake,
		Dependencies::FastThread,
		Dependencies::Rack
	]
	
	def install!
		Dir.chdir(PASSENGER_ROOT)
		show_welcome_screen
		check_dependencies || exit(1)
		
		check_write_permission_to_passenger_root || exit(1)
		if should_we_download_and_install_nginx_automatically?
			nginx_dir = download_and_extract_nginx
			nginx_prefix = ask_for_nginx_install_prefix
			extra_nginx_configure_flags = nil
		else
			nginx_dir = ask_for_nginx_source_dir
			nginx_prefix = ask_for_nginx_install_prefix
			extra_nginx_configure_flags = ask_for_extra_nginx_configure_flags(nginx_prefix)
		end
		nginx_config_already_exists_before_installing = nginx_config_exists?(nginx_prefix)
		if install_nginx(nginx_dir, extra_nginx_configure_flags)
			if nginx_config_already_exists_before_installing
				show_passenger_config_snippets
			else
				insert_passenger_config_snippets
			end
			show_deployment_example
		else
			show_possible_solutions_for_compilation_and_installation_problems
			exit(1)
		end
	ensure
		reset_terminal_colors
	end

private
	def show_welcome_screen
		render_template 'nginx/welcome', :version => VERSION_STRING
		wait
	end
	
	def check_write_permission_to_passenger_root
		File.new("__test__.txt", "w").close
		return true
	rescue
		puts
		line
		if Process.uid == 0
			render_template 'no_write_permission_to_passenger_root'
		else
			render_template 'run_installer_as_root'
		end
		return false
	ensure
		File.unlink("__test__.txt") rescue nil
	end
	
	def show_deployment_example
		puts
		line
		render_template 'deployment_example',
			:users_guide => USERS_GUIDE,
			:phusion_website => PHUSION_WEBSITE,
			:passenger_website => PASSENGER_WEBSITE
	end
	
	def show_possible_solutions_for_compilation_and_installation_problems
		puts
		line
		render_template 'possible_solutions_for_compilation_and_installation_problems',
			:users_guide => USERS_GUIDE,
			:passenger_website => PASSENGER_WEBSITE
	end
end

options = {}
parser = OptionParser.new do |opts|
	opts.banner = "Usage: passenger-install-nginx-module [options]"
	opts.separator ""
	
	opts.separator "Options:"
	#opts.on("-a", "--auto", String, "Automatically build the Apache module,\n" <<
	#        "#{' ' * 37}without interactively asking for user\n" <<
	#        "#{' ' * 37}input.") do
	#	options[:auto] = true
	#end
end
begin
	parser.parse!
rescue OptionParser::ParseError => e
	puts e
	puts
	puts "Please see '--help' for valid options."
	exit 1
end

Installer.new(options).start
