[[relationship_with_ruby]]
=== Phusion Passenger and its relationship with Ruby

Phusion Passenger's core is written in C++ for performance and memory efficiency. It supports web applications written in any language. Phusion Passenger requires Ruby, its usage of Ruby is minimal in order to maximize performance and to minimize memory usage.

 * Phusion Passenger's installer, build system and administration tools are written in Ruby.
 * Certain internally used tools, such as the crash handler (which generates a backtrace in case Phusion Passenger crash) and the prespawn script (used to implement
ifdef::apache[]
<<PassengerPreStart,PassengerPreStart>>)
endif::[]
ifdef::nginx[]
<<PassengerPreStart,passenger_pre_start>>)
endif::[]
are written in Ruby as well.
 * Ruby web application support is implemented in Ruby.
 * If you use <<flying_passenger,Flying Passenger>>, then the Flying Passenger daemon is written in Ruby. The daemon is a small (less than 500 lines of code) and offloads most tasks to the C++ core.
 * If you use link:Users%20guide%20Standalone.html[Phusion Passenger Standalone], then the frontend (the `passenger` command) is written in Ruby. The frontend is small (less than 1500 lines of code) and offloads most tasks to the C++ core.

Other than the aforementioned aspects, Phusion Passenger does not use Ruby during normal operation. For example, if you run Python WSGI web applications on Phusion Passenger, then there will be (almost) no Ruby code running on the system.