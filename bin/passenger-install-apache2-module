#!/usr/bin/env ruby
#  Phusion Passenger - http://www.modrails.com/
#  Copyright (C) 2008  Phusion
#
#  Phusion Passenger is a trademark of Hongli Lai & Ninh Bui.
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; version 2 of the License.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

PASSENGER_ROOT = File.expand_path(File.dirname(__FILE__) << "/..")
$LOAD_PATH.unshift("#{PASSENGER_ROOT}/lib")
$LOAD_PATH.unshift("#{PASSENGER_ROOT}/ext")

# The Apache executable may be located in an 'sbin' folder. We add
# the 'sbin' folders to $PATH just in case. On some systems
# 'sbin' isn't in $PATH unless the user is logged in as root from
# the start (i.e. not via 'su' or 'sudo').
ENV["PATH"] += ":/usr/sbin:/sbin:/usr/local/sbin"

require 'optparse'
require 'phusion_passenger/platform_info'
require 'phusion_passenger/dependencies'
require 'phusion_passenger/abstract_installer'
include PlatformInfo

class Installer < PhusionPassenger::AbstractInstaller
	include PhusionPassenger
	
	def dependencies
		result = [
			Dependencies::GCC,
			Dependencies::Ruby_DevHeaders,
			Dependencies::Ruby_OpenSSL,
			Dependencies::RubyGems,
			Dependencies::Rake,
			Dependencies::Apache2,
			Dependencies::Apache2_DevHeaders,
			Dependencies::FastThread
		]
		#if PlatformInfo.apr_config_needed?
			result << Dependencies::APR_DevHeaders
			result << Dependencies::APU_DevHeaders
		#end
		return result
	end
	
	def install!
		if PhusionPassenger.natively_packaged?
			check_dependencies || exit(1)
			show_apache2_config_snippets
			show_deployment_example
			exit
		end
		
		Dir.chdir(PASSENGER_ROOT)
		show_welcome_screen
		check_dependencies || exit(1)
		check_whether_apache_uses_compatible_mpm
		check_write_permission_to_passenger_root || exit(1)
		if install_apache2_module
			show_apache2_config_snippets
			show_deployment_example
		else
			show_possible_solutions_for_compilation_and_installation_problems
			exit(1)
		end
	end

private
	def show_welcome_screen
		render_template 'apache2/welcome', :version => PhusionPassenger::VERSION_STRING
		wait
	end
	
	def check_whether_apache_uses_compatible_mpm
		# 'httpd -V' output is in the form of:
		#
		# Server MPM:      Prefork     # <--- this line is not always available!
		# ...
		# Server compiled with....
		#  -D APACHE_MPM_DIR="server/mpm/prefork"
		output = `#{HTTPD} -V`
		output =~ /^Server MPM: +(.*)$/
		if $1
			mpm = $1.downcase
		else
			output =~ /APACHE_MPM_DIR="server\/mpm\/(.*)"/
			if $1
				mpm = $1.downcase
			else
				mpm = nil
			end
		end
		if mpm != "prefork" && mpm != "worker"
			new_screen
			render_template 'apache2/apache_must_be_compiled_with_compatible_mpm',
				:current_mpm => mpm
			wait
		end
	end
	
	def check_write_permission_to_passenger_root
		File.new("__test__.txt", "w").close
		return true
	rescue SystemCallError
		puts
		line
		if Process.uid == 0
			render_template 'apache2/no_write_permission_to_passenger_root'
		else
			render_template 'apache2/run_installer_as_root'
		end
		return false
	ensure
		File.unlink("__test__.txt") rescue nil
	end
	
	def install_apache2_module
		puts
		line
		color_puts '<banner>Compiling and installing Apache 2 module...</banner>'
		puts "cd #{PASSENGER_ROOT}"
		if ENV['TRACE']
			puts "#{RUBY} -S #{RAKE} --trace clean apache2"
			return sh(RUBY, "-S", RAKE, "--trace", "clean", "apache2")
		else
			puts "#{RUBY} -S #{RAKE} clean apache2"
			return sh(RUBY, "-S", RAKE, "clean", "apache2")
		end
	end
	
	def show_apache2_config_snippets
		puts
		line
		if PhusionPassenger.natively_packaged?
			module_location = "#{PASSENGER_ROOT}/lib/passenger/mod_passenger.so"
		else
			module_location = "#{PASSENGER_ROOT}/ext/apache2/mod_passenger.so"
		end
		render_template 'apache2/config_snippets',
			:module_location => module_location,
			:passenger_root => PASSENGER_ROOT,
			:ruby => RUBY
		if PhusionPassenger.natively_packaged?
			wait(10)
		else
			wait
		end
	end
	
	def show_deployment_example
		puts
		line
		render_template 'apache2/deployment_example',
			:users_guide => USERS_GUIDE,
			:phusion_website => PHUSION_WEBSITE,
			:passenger_website => PASSENGER_WEBSITE
	end
	
	def show_possible_solutions_for_compilation_and_installation_problems
		new_screen
		render_template 'apache2/possible_solutions_for_compilation_and_installation_problems',
			:users_guide => USERS_GUIDE,
			:passenger_website => PASSENGER_WEBSITE
	end
end

options = {}
parser = OptionParser.new do |opts|
	opts.banner = "Usage: passenger-install-apache2-module [options]"
	opts.separator ""
	
	opts.separator "Options:"
	opts.on("-a", "--auto", String, "Automatically build the Apache module,\n" <<
	        "#{' ' * 37}without interactively asking for user\n" <<
	        "#{' ' * 37}input.") do
		options[:auto] = true
	end
end
begin
	parser.parse!
rescue OptionParser::ParseError => e
	puts e
	puts
	puts "Please see '--help' for valid options."
	exit 1
end

Installer.new(options).start
